C51 COMPILER V9.60.0.0   SYSTEM                                                            04/19/2024 22:11:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN .\Objects\System.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE System.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\System.lst) OBJECT(.\Objects\System.obj)

line level    source

   1          //#include "Type.h"
   2          #include "CH552.H"
   3          #include "System.h"
   4          
   5          /******************************************************************************
   6          * Function Name : CfgFsys( )
   7          * Description: CH559 clock selection and configuration function, the internal crystal oscillator 12MHz is 
             -used by default, if FREQ_SYS is defined, it can be
   8                              According to the configuration of PLL_CFG and CLOCK_CFG, the formula is as follows:
   9                              Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  10                              The specific clock needs to be configured by yourself
  11          * Input :       None
  12          * Output :      None
  13          * Return :      None
  14          *******************************************************************************/
  15          void CfgFsys()  
  16          {
  17   1              SAFE_MOD = 0x55;                                                        //Enable safe mode
  18   1              SAFE_MOD = 0xAA;                                                                                                 
  19   1      /*
  20   1         Fxt = 24MHz(8MHz~25MHz for non-USB application), from external oscillator @XI&XO
  21   1         Fosc = bOSC_EN_INT ? 24MHz : Fxt
  22   1         Fpll = Fosc * 4 => 96MHz (32MHz~100MHz for non-USB application)
  23   1         Fusb4x = Fpll / 2 => 48MHz (Fixed)
  24   1                    MASK_SYS_CK_SEL[2] [1] [0]
  25   1         Fsys = Fpll/3   =  32MHz:  1   1   1
  26   1         Fsys = Fpll/4   =  24MHz:  1   1   0
  27   1         Fsys = Fpll/6   =  16MHz:  1   0   1
  28   1         Fsys = Fpll/8   =  12MHz:  1   0   0
  29   1         Fsys = Fpll/16  =   6MHz:  0   1   1
  30   1         Fsys = Fpll/32  =   3MHz:  0   1   0
  31   1         Fsys = Fpll/128 = 750KHz:  0   0   1
  32   1         Fsys = Fpll/512 =187.5KHz: 0   0   0
  33   1      */
  34   1              CLOCK_CFG &= ~MASK_SYS_CK_SEL;
  35   1              CLOCK_CFG |= 4;                                                                                                                           
  36   1              
  37   1              SAFE_MOD = 0xFF;                        //Turn off safe mode
  38   1      // If you modify the main frequency, you must modify FREQ_SYS at the same time, otherwise the delay functi
             -on will be inaccurate
  39   1      }
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name  : mDelayus(UNIT16 n)
  44          * Description    : us delay function
  45          * Input          : UNIT16 n
  46          * Output         : None
  47          * Return         : None
  48          *******************************************************************************/ 
  49          void mDelayuS( UINT16 n )  // Delay in uS
  50          {
  51   1              while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  52   2                      ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
C51 COMPILER V9.60.0.0   SYSTEM                                                            04/19/2024 22:11:44 PAGE 2   

  53   2      #ifdef  FREQ_SYS
  54   2      #if             FREQ_SYS >= 14000000
                              ++ SAFE_MOD;
              #endif
  57   2      #if             FREQ_SYS >= 16000000
                              ++ SAFE_MOD;
              #endif
  60   2      #if             FREQ_SYS >= 18000000
                              ++ SAFE_MOD;
              #endif
  63   2      #if             FREQ_SYS >= 20000000
                              ++ SAFE_MOD;
              #endif
  66   2      #if             FREQ_SYS >= 22000000
                              ++ SAFE_MOD;
              #endif
  69   2      #if             FREQ_SYS >= 24000000
                              ++ SAFE_MOD;
              #endif
  72   2      #if             FREQ_SYS >= 26000000
                              ++ SAFE_MOD;
              #endif
  75   2      #if             FREQ_SYS >= 28000000
                              ++ SAFE_MOD;
              #endif
  78   2      #if             FREQ_SYS >= 30000000
                              ++ SAFE_MOD;
              #endif
  81   2      #if             FREQ_SYS >= 32000000
                              ++ SAFE_MOD;
              #endif
  84   2      #if             FREQ_SYS >= 34000000
                              ++ SAFE_MOD;
              #endif
  87   2      #if             FREQ_SYS >= 36000000
                              ++ SAFE_MOD;
              #endif
  90   2      #if             FREQ_SYS >= 38000000
                              ++ SAFE_MOD;
              #endif
  93   2      #if             FREQ_SYS >= 40000000
                              ++ SAFE_MOD;
              #endif
  96   2      #if             FREQ_SYS >= 42000000
                              ++ SAFE_MOD;
              #endif
  99   2      #if             FREQ_SYS >= 44000000
                              ++ SAFE_MOD;
              #endif
 102   2      #if             FREQ_SYS >= 46000000
                              ++ SAFE_MOD;
              #endif
 105   2      #if             FREQ_SYS >= 48000000
                              ++ SAFE_MOD;
              #endif
 108   2      #if             FREQ_SYS >= 50000000
                              ++ SAFE_MOD;
              #endif
 111   2      #if             FREQ_SYS >= 52000000
                              ++ SAFE_MOD;
              #endif
 114   2      #if             FREQ_SYS >= 54000000
C51 COMPILER V9.60.0.0   SYSTEM                                                            04/19/2024 22:11:44 PAGE 3   

                              ++ SAFE_MOD;
              #endif
 117   2      #if             FREQ_SYS >= 56000000
                              ++ SAFE_MOD;
              #endif
 120   2      #endif
 121   2                      -- n;
 122   2              }
 123   1      }
 124          
 125          
 126          /*******************************************************************************
 127          * Function Name  : mDelayms(UNIT16 n)
 128          * Description    : ms delay function
 129          * Input          : UNIT16 n
 130          * Output         : None
 131          * Return         : None
 132          *******************************************************************************/
 133          void    mDelaymS( UINT16 n )                              // Delay in mS
 134          {
 135   1              while ( n ) 
 136   1              {
 137   2                      mDelayuS( 1000 );
 138   2                      -- n;
 139   2              }
 140   1      }
 141          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     53    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
