C51 COMPILER V9.60.0.0   GPIO                                                              03/23/2024 14:28:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\GPIO.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE GPIO.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\GPIO
                    -.lst) OBJECT(.\Objects\GPIO.obj)

line level    source

   1          
   2          //#include "Type.h"
   3          #include "CH552.H"
   4          #include "System.h"
   5          #include "GPIO.h"
   6          
   7          /*******************************************************************************
   8          * Function Name : CH559GPIODrivCap(UINT8 Port,UINT8 Cap)
   9          * Description : Port 0, 1, 2, 3 drive capability settings
  10          * Input : UINT8 Port port selection (0, 1, 2, 3)
  11                             UINT8 Cap drive capability selection ((0) 5mA, (1) 20mA (Note: P1 port is 10mA))
  12          * Output : None
  13          * Return : SUCCESS succeeded
  14                             FAIL failed
  15          *******************************************************************************/
  16          /*UINT8 CH559GPIODrivCap(UINT8 Port,UINT8 Cap)
  17          {
  18              if (Port >= 4)
  19              {
  20                  return FAIL;
  21              }
  22              
  23              if (Cap == 0)
  24              {           //The maximum driving current is 5mA
  25                  PORT_CFG &= ~(bP0_DRV << Port);
  26              }
  27              else
  28              {           
  29                  PORT_CFG |= (bP0_DRV << Port); //Maximum driving current 20mA
  30              }
  31          
  32              return SUCCESS;
  33          }*/
  34          
  35          /*******************************************************************************
  36          * Function Name : CH559GPIOModeSelt(UINT8 Port,UINT8 Mode,UINT8 PinNum)
  37          * Description : Port 0, 1, 2, 3 pin mode settings
  38          * Input : UINT8 Port port selection (0, 1, 2, 3)
  39                                          UINT8 Cap drive mode selection (bPn_OC & Pn_DIR & Pn_PU)
  40                                          0(00): High impedance input mode, pins does not pull;
  41                                          1(01): Push-pull mode with a symmetrical drive capability, output, or can absorb a large current;
  42                                          2(10): Open drain, high impedance input support pin does not pull;
  43                                          3(11): Quasi-bidirectional mode (standard 8051), open-drain output, input support pin pull-up resistor
             -, a high level when the
  44                                                  output from the low rotation automatically driven high for two clock cycles to speed up the conversio
             -n;
  45                                          UINT8 PinNum (pin selection 0-7)
  46          * Output : None
  47          * Return : SUCCESS succeeded
  48                             FAIL failed
  49          *******************************************************************************/
  50          UINT8 CH559GPIOModeSelt(UINT8 Port, UINT8 Mode, UINT8 PinNum)
  51          {
  52   1          UINT8 Pn_MOD_OC;
C51 COMPILER V9.60.0.0   GPIO                                                              03/23/2024 14:28:31 PAGE 2   

  53   1              UINT8 Pn_DIR_PU;
  54   1          if (Port >= 4 || Mode >= 4 || PinNum >= 8)
  55   1          {
  56   2              return FAIL;
  57   2          }
  58   1      
  59   1          switch (Port)
  60   1          {
  61   2          case 0:
  62   2              /*Pn_MOD_OC = P0_MOD_OC;
  63   2                      Pn_DIR_PU = P0_DIR_PU;
  64   2              break;*/
  65   2      
  66   2          case 1:
  67   2              Pn_MOD_OC = P1_MOD_OC;
  68   2                      Pn_DIR_PU = P1_DIR_PU;
  69   2              break;
  70   2      
  71   2          case 2:
  72   2              /*Pn_MOD_OC = P2_MOD_OC;
  73   2                      Pn_DIR_PU = P2_DIR_PU;
  74   2              break;*/
  75   2      
  76   2          case 3:
  77   2              Pn_MOD_OC = P3_MOD_OC;
  78   2                      Pn_DIR_PU = P3_DIR_PU;
  79   2              break;
  80   2          }
  81   1          
  82   1          switch (Mode)
  83   1          {
  84   2          case 0: // High impedance input mode
  85   2              Pn_MOD_OC &= ~(1<<PinNum);
  86   2              Pn_DIR_PU &= ~(1<<PinNum);
  87   2              break;
  88   2              
  89   2          case 1: // Push-pull mode with a symmetrical drive capability
  90   2              Pn_MOD_OC &= ~(1<<PinNum);
  91   2              Pn_DIR_PU |= 1<<PinNum;
  92   2              break;
  93   2              
  94   2          case 2: //Open drain
  95   2              Pn_MOD_OC |= 1<<PinNum;
  96   2              Pn_DIR_PU &= ~(1<<PinNum);
  97   2              break;
  98   2              
  99   2          case 3: //Open-drain output, no pull-up, support input
 100   2              Pn_MOD_OC |= 1<<PinNum;
 101   2              Pn_DIR_PU |= 1<<PinNum;
 102   2              break;
 103   2      
 104   2          default:
 105   2              break;
 106   2          }
 107   1      
 108   1          switch (Port)
 109   1          {
 110   2          case 0:
 111   2              /*P0_MOD_OC = Pn_MOD_OC;
 112   2                      P0_DIR_PU = Pn_DIR_PU;
 113   2              break;*/
 114   2      
C51 COMPILER V9.60.0.0   GPIO                                                              03/23/2024 14:28:31 PAGE 3   

 115   2          case 1:
 116   2              P1_MOD_OC = Pn_MOD_OC;
 117   2                      P1_DIR_PU = Pn_DIR_PU;
 118   2              break;
 119   2      
 120   2          case 2:
 121   2              /*P2_MOD_OC = Pn_MOD_OC;
 122   2                      P2_DIR_PU = Pn_DIR_PU;
 123   2              break;*/
 124   2      
 125   2          case 3:
 126   2              P3_MOD_OC = Pn_MOD_OC;
 127   2                      P3_DIR_PU = Pn_DIR_PU;
 128   2              break;
 129   2          }
 130   1      
 131   1          return SUCCESS;
 132   1      }
 133          
 134          /*******************************************************************************
 135          * Function Name  : CH559P4Mode()
 136          * Description : The P4 port of CH559 is initialized, P4 is the input port by default
 137          * Input          : None
 138          * Output         : None
 139          * Return         : None
 140          *******************************************************************************/
 141          /*void CH559P4Mode( )
 142          {
 143                  //P4_DIR |= 0xff;               //Set 1 to output
 144                  P4_DIR |= (1 << 2) | (1 << 3) | (1 << 6) | (1 << 7);
 145                  //P4_PU |= 0xff;                                                                        //Start the internal pull-up of the p4 port
 146              P4_PU |= (1 << 2) | (1 << 3) | (1 << 6) | (1 << 7);
 147                  P4_CFG |= bP4_DRV;                                                                      //When this bit is 0, the P4 port drive capability is 5mA, and when it is 1, i
             -t is 20mA
 148          }*/
 149          
 150          
 151          /*******************************************************************************
 152          * Function Name  : CH559GPIOInterruptInit()
 153          * Description : CH559GPIO interrupt initialization, other pins such as P5.5\P1.4\P0.3\P5.7\P4.1\RXD0 are s
             -et in the same way
 154          * Input          : None
 155          * Output         : None
 156          * Return         : None
 157          *******************************************************************************/
 158          void CH559GPIOInterruptInit()
 159          {                                                                                                          
 160   1              GPIO_IE &= ~bIE_IO_EDGE;                        //Interrupt mode selection, this bit is 0 means IO port level interrupt, this 
             -bit is 1 means IO port edge interrupt
 161   1              GPIO_IE |= bIE_RXD1_LO;                         //Enable the interrupt of the RXD1 pin, the same is true for other pin interru
             -pt settings
 162   1      }
 163          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    179    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   GPIO                                                              03/23/2024 14:28:31 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
