C51 COMPILER V9.60.0.0   SYSTEM                                                            03/28/2024 17:33:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN .\Objects\System.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE System.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\Sy
                    -stem.lst) OBJECT(.\Objects\System.obj)

line level    source

   1          //#include "Type.h"
   2          #include "CH552.H"
   3          #include "System.h"
   4          
   5          /******************************************************************************
   6          * Function Name : CfgFsys( )
   7          * Description: CH559 clock selection and configuration function, the internal crystal oscillator 12MHz is 
             -used by default, if FREQ_SYS is defined, it can be
   8                              According to the configuration of PLL_CFG and CLOCK_CFG, the formula is as follows:
   9                              Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  10                              The specific clock needs to be configured by yourself
  11          * Input :       None
  12          * Output :      None
  13          * Return :      None
  14          *******************************************************************************/
  15          void CfgFsys()  
  16          {
  17   1              SAFE_MOD = 0x55;                                                        //Enable safe mode
  18   1              SAFE_MOD = 0xAA;                                                                                                 
  19   1      
  20   1              CLOCK_CFG &= ~MASK_SYS_CK_SEL;
  21   1      
  22   1              //Configure the system clock to 12MHz
  23   1              CLOCK_CFG |= 4;                                                                                                                           
  24   1              
  25   1              SAFE_MOD = 0xFF;                        //Turn off safe mode
  26   1      // If you modify the main frequency, you must modify FREQ_SYS at the same time, otherwise the delay functi
             -on will be inaccurate
  27   1      }
  28          
  29          
  30          /*******************************************************************************
  31          * Function Name  : mDelayus(UNIT16 n)
  32          * Description    : us delay function
  33          * Input          : UNIT16 n
  34          * Output         : None
  35          * Return         : None
  36          *******************************************************************************/ 
  37          void mDelayuS( UINT16 n )  // Delay in uS
  38          {
  39   1              while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  40   2                      ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  41   2      #ifdef  FREQ_SYS
  42   2      #if             FREQ_SYS >= 14000000
                              ++ SAFE_MOD;
              #endif
  45   2      #if             FREQ_SYS >= 16000000
                              ++ SAFE_MOD;
              #endif
  48   2      #if             FREQ_SYS >= 18000000
                              ++ SAFE_MOD;
              #endif
  51   2      #if             FREQ_SYS >= 20000000
                              ++ SAFE_MOD;
C51 COMPILER V9.60.0.0   SYSTEM                                                            03/28/2024 17:33:05 PAGE 2   

              #endif
  54   2      #if             FREQ_SYS >= 22000000
                              ++ SAFE_MOD;
              #endif
  57   2      #if             FREQ_SYS >= 24000000
                              ++ SAFE_MOD;
              #endif
  60   2      #if             FREQ_SYS >= 26000000
                              ++ SAFE_MOD;
              #endif
  63   2      #if             FREQ_SYS >= 28000000
                              ++ SAFE_MOD;
              #endif
  66   2      #if             FREQ_SYS >= 30000000
                              ++ SAFE_MOD;
              #endif
  69   2      #if             FREQ_SYS >= 32000000
                              ++ SAFE_MOD;
              #endif
  72   2      #if             FREQ_SYS >= 34000000
                              ++ SAFE_MOD;
              #endif
  75   2      #if             FREQ_SYS >= 36000000
                              ++ SAFE_MOD;
              #endif
  78   2      #if             FREQ_SYS >= 38000000
                              ++ SAFE_MOD;
              #endif
  81   2      #if             FREQ_SYS >= 40000000
                              ++ SAFE_MOD;
              #endif
  84   2      #if             FREQ_SYS >= 42000000
                              ++ SAFE_MOD;
              #endif
  87   2      #if             FREQ_SYS >= 44000000
                              ++ SAFE_MOD;
              #endif
  90   2      #if             FREQ_SYS >= 46000000
                              ++ SAFE_MOD;
              #endif
  93   2      #if             FREQ_SYS >= 48000000
                              ++ SAFE_MOD;
              #endif
  96   2      #if             FREQ_SYS >= 50000000
                              ++ SAFE_MOD;
              #endif
  99   2      #if             FREQ_SYS >= 52000000
                              ++ SAFE_MOD;
              #endif
 102   2      #if             FREQ_SYS >= 54000000
                              ++ SAFE_MOD;
              #endif
 105   2      #if             FREQ_SYS >= 56000000
                              ++ SAFE_MOD;
              #endif
 108   2      #endif
 109   2                      -- n;
 110   2              }
 111   1      }
 112          
 113          
 114          /*******************************************************************************
C51 COMPILER V9.60.0.0   SYSTEM                                                            03/28/2024 17:33:05 PAGE 3   

 115          * Function Name  : mDelayms(UNIT16 n)
 116          * Description    : ms delay function
 117          * Input          : UNIT16 n
 118          * Output         : None
 119          * Return         : None
 120          *******************************************************************************/
 121          void    mDelaymS( UINT16 n )                              // Delay in mS
 122          {
 123   1              while ( n ) 
 124   1              {
 125   2                      mDelayuS( 1000 );
 126   2                      -- n;
 127   2              }
 128   1      }
 129          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     53    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
